[{"text": "As we only need one node for our server, Mongo DB is efficient enough and hence we should use MongoDB. I have worked with it before so it would be easier as well.", "created_at": 1454894217.0, "updated_at": 1454894217.0, "user": "user2", "issue": 3, "id": 181151440}, {"text": "I think python is the right way to go. Just see the link below for reference:\r\nhttps://clarknikdelpowell.com/blog/creating-sublime-text-3-plugins-part-1/ ", "created_at": 1454894274.0, "updated_at": 1454894274.0, "user": "user3", "issue": 6, "id": 181151553}, {"text": "https://github.com/timm/timm.github.io/blob/master/pdf/06anomalies-pits0.pdf Here is a paper Dr.Menzies  gave me. We should study it ASAP and then we can hold discussions on it.", "created_at": 1454894287.0, "updated_at": 1454894287.0, "user": "user2", "issue": 5, "id": 181151563}, {"text": "Working on NLTK in python.", "created_at": 1454894368.0, "updated_at": 1454894368.0, "user": "user1", "issue": 4, "id": 181151713}, {"text": "Me and Ayush would work on the server part I guess? as you guys are working on the NLTK part. This part needs to be finished ASAP!", "created_at": 1454894371.0, "updated_at": 1454894371.0, "user": "user2", "issue": 2, "id": 181151731}, {"text": "Also for the DB structure lets finalize the needed fields and add the structure up here. Then we can compare and contrast to arrive at an optimal structure.", "created_at": 1454894435.0, "updated_at": 1454894435.0, "user": "user2", "issue": 3, "id": 181151954}, {"text": "Yes. Sounds Good.", "created_at": 1454894438.0, "updated_at": 1454894438.0, "user": "user3", "issue": 2, "id": 181151967}, {"text": "Lets get started on this part after we finish off our server part atleast. Also more focus should be on the recommendation system part for now as it is the base of our project.", "created_at": 1454894517.0, "updated_at": 1454894517.0, "user": "user2", "issue": 6, "id": 181152108}, {"text": "No need to create a server for fetching data using API calls. We found their official dump:\r\nhttps://archive.org/download/stackexchange\r\nNeed to Download these:\r\nstackoverflow.com-Posts.7z   \r\nstackoverflow.com-Tags.7z   \r\nstackoverflow.com-Users.7z \r\n\r\nThe size for download is about 8 gbs. Can someone download it overnight maybe? The speed is really low,so would take around 15 hrs or so... ", "created_at": 1455589269.0, "updated_at": 1455589269.0, "user": "user2", "issue": 2, "id": 184477329}, {"text": "Also now we can write a script to translate the XML with tags of python and corresponding posts and users into a DB for our use. So which DB to use now? Should we go with nosql ones (they are extremely fast) or the conventional mysql lampp stack.", "created_at": 1455589350.0, "updated_at": 1455589350.0, "user": "user2", "issue": 2, "id": 184477708}, {"text": "Thanks for the feedback.", "created_at": 1455666773.0, "updated_at": 1455666773.0, "user": "user4", "issue": 1, "id": 184929676}, {"text": "Ya sure... lets filter out just the data we need and add it to the DB tonight", "created_at": 1456089175.0, "updated_at": 1456089175.0, "user": "user3", "issue": 15, "id": 186918809}, {"text": "I will develop a prototype by 26th Feb and we can use that as a base for future iterations. \r\n", "created_at": 1456192718.0, "updated_at": 1456192718.0, "user": "user3", "issue": 17, "id": 187478341}, {"text": "We have two options: a) request su mode from the user while installing and install mongo and make the db server run everytime the plugin boots before the db client connects\r\nb) use a txt file or a json file and make the plugin read from it", "created_at": 1456193118.0, "updated_at": 1456193118.0, "user": "user2", "issue": 16, "id": 187480803}, {"text": "which one do you think is more optimal?", "created_at": 1456193200.0, "updated_at": 1456193200.0, "user": "user2", "issue": 16, "id": 187481626}, {"text": "Cool found and pulled it! Working! Awesome job!", "created_at": 1456464000.0, "updated_at": 1456464000.0, "user": "user2", "issue": 20, "id": 189118203}, {"text": "everything is on the localhost for now! well see how it goes!", "created_at": 1456464081.0, "updated_at": 1456464081.0, "user": "user2", "issue": 16, "id": 189118336}, {"text": "Cool.. lets get on to it and finish it ASAP", "created_at": 1456464218.0, "updated_at": 1456464218.0, "user": "user3", "issue": 21, "id": 189118579}, {"text": "Using Topic Modeling and K-Mean classifier along with NLTK.", "created_at": 1456693674.0, "updated_at": 1456693674.0, "user": "user4", "issue": 4, "id": 189946398}, {"text": "Done!", "created_at": 1456855681.0, "updated_at": 1456855681.0, "user": "user2", "issue": 25, "id": 190836817}, {"text": "The tags present in data are:\r\n1. Id\r\n2. ViewCount\r\n3. Title\r\n4. LastEditDate\r\n5. AnswerCount\r\n6. Score\r\n7. OwnerDisplayName\r\n8. PostTypeId      --1 for Question/ 2 for Answers\r\n9. OwnerUserId\r\n10. Body\r\n11. Tags\r\n12. LastEditorUserId\r\n13. LastActivityDate\r\n14. CommentCount\r\n15. AcceptedAnswerId\r\n16. CreationDate", "created_at": 1456855894.0, "updated_at": 1456855894.0, "user": "user4", "issue": 29, "id": 190837884}, {"text": "Done..!", "created_at": 1456867983.0, "updated_at": 1456867983.0, "user": "user3", "issue": 30, "id": 190914512}, {"text": "this would be done later when we are through we the data analysis part! closing this for now! ", "created_at": 1456880238.0, "updated_at": 1456880238.0, "user": "user2", "issue": 31, "id": 190999636}, {"text": "Have added sol2keywords.json file which has required data.", "created_at": 1457066475.0, "updated_at": 1457066475.0, "user": "user1", "issue": 32, "id": 192098973}, {"text": "Working on it", "created_at": 1457072509.0, "updated_at": 1457072509.0, "user": "user1", "issue": 28, "id": 192129321}]